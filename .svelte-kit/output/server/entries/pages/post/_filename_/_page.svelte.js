import { c as create_ssr_component, v as validate_component } from "../../../../chunks/ssr.js";
import "marked";
import "js-yaml";
import { E as ErrorMessage } from "../../../../chunks/Tag.svelte_svelte_type_style_lang.js";
const css = {
  code: ".post-container.svelte-17s0cq2.svelte-17s0cq2{max-width:800px;margin:0 auto;padding:2rem 1rem;@apply shadow-lg bg-white/75 backdrop-blur-lg;}h1.svelte-17s0cq2.svelte-17s0cq2{font-size:2.5rem;margin-bottom:1rem;font-weight:bold;color:white}.post-thumbnail.svelte-17s0cq2.svelte-17s0cq2{width:100%;height:auto;border-radius:10px;margin-bottom:1.5rem}.post-date.svelte-17s0cq2.svelte-17s0cq2{font-size:0.9rem;color:#ddd;margin-bottom:0.1rem}.post-author.svelte-17s0cq2.svelte-17s0cq2{font-size:0.9rem;color:#ddd;margin-bottom:0.35rem}.post-date.svelte-17s0cq2 i.svelte-17s0cq2,.post-author.svelte-17s0cq2 i.svelte-17s0cq2{margin-right:0.5rem;color:#ddd}.post-tags.svelte-17s0cq2.svelte-17s0cq2{display:flex;align-items:center;margin-bottom:0.2rem}.post-tags.svelte-17s0cq2 i.svelte-17s0cq2{margin-right:0.5rem;color:#ddd}.post-header.svelte-17s0cq2.svelte-17s0cq2{background-size:cover;background-position:center;background-repeat:no-repeat;width:100vw;display:flex;flex-direction:column;align-items:flex-end;justify-content:flex-start;color:white;text-align:center}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  import { onMount } from 'svelte';\\n  import { marked } from 'marked';\\n  import yaml from 'js-yaml';\\n  import ErrorMessage from '../../../components/ErrorMessage.svelte';\\n  import Tag from '../../../components/Tag.svelte';\\n  import { formatDate } from '$lib/utils/formatDate';\\n\\n  export let data;\\n\\n  let post;\\n  let loading = true;\\n\\n  onMount(async () => {\\n    window.scrollTo(0, 0);\\n\\n    // 加載對應文件名的文章\\n    const postFiles = import.meta.glob('/src/posts/*.md', { query: '?raw', import: 'default' });\\n    const path = \`/src/posts/\${data.filename}.md\`;\\n\\n    if (postFiles[path]) {\\n      const postContent = await postFiles[path]();\\n      const yamlMatch = postContent.match(/---[\\\\r\\\\n]+([\\\\s\\\\S]+?)[\\\\r\\\\n]+---/);\\n\\n      let frontMatter = {};\\n      let markdownContent = postContent;\\n\\n      if (yamlMatch) {\\n        frontMatter = yaml.load(yamlMatch[1]);\\n        markdownContent = postContent.slice(yamlMatch[0].length);\\n      }\\n\\n      const parsedContent = marked(markdownContent);\\n\\n      post = {\\n        title: frontMatter.title,\\n        date: new Date(frontMatter.date),\\n        author: frontMatter.author,\\n        tags: frontMatter.tags,\\n        thumbnail: frontMatter.thumbnail, // 文章的縮圖\\n        content: parsedContent,\\n      };\\n    }\\n\\n    loading = false;\\n  });\\n<\/script>\\n\\n<style>\\n  .post-container {\\n    max-width: 800px;\\n    margin: 0 auto;\\n    padding: 2rem 1rem;\\n    @apply shadow-lg bg-white/75 backdrop-blur-lg;\\n  }\\n\\n  h1 {\\n    font-size: 2.5rem;\\n    margin-bottom: 1rem;\\n    font-weight: bold;\\n    color: white;\\n  }\\n\\n  .post-thumbnail {\\n    width: 100%;\\n    height: auto;\\n    border-radius: 10px;\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .post-date {\\n    font-size: 0.9rem;\\n    color: #ddd;\\n    margin-bottom: 0.1rem;\\n  }\\n\\n  .post-author {\\n    font-size: 0.9rem;\\n    color: #ddd;\\n    margin-bottom: 0.35rem;\\n  }\\n\\n  .post-date i, .post-author i {\\n    margin-right: 0.5rem;\\n    color: #ddd;\\n  }\\n\\n  .post-tags {\\n    display: flex;\\n    align-items: center;\\n    margin-bottom: 0.2rem;\\n  }\\n\\n  .post-tags i {\\n    margin-right: 0.5rem;\\n    color: #ddd;\\n  }\\n  \\n  .post-tags span {\\n    background-color: #007bff;\\n    color: white;\\n    padding: 0.25rem 0.5rem;\\n    border-radius: 0.25rem;\\n    margin-right: 0.5rem;\\n    font-size: 0.75rem;\\n  }\\n\\n  .post-header {\\n    background-size: cover;\\n    background-position: center;\\n    background-repeat: no-repeat;\\n    width: 100vw;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: flex-end;\\n    justify-content: flex-start;\\n    color: white;\\n    text-align: center;\\n  }\\n\\n  \\n</style>\\n\\n{#if loading}\\n  <ErrorMessage message=\\"載入中...\\" />\\n{:else if post}\\n  <section class=\\"fade-in-bg\\">\\n    <!-- 使用文章的 thumbnail 作為背景圖 -->\\n    <section class=\\"post-header\\" style=\\"background-image: url('{post.thumbnail}');\\">\\n      <div class=\\"h-[20vh]\\"></div>\\n      <div class=\\"max-w-full w-[800px] mx-auto flex-row bg-black/50 backdrop-blur-lg p-4 relative\\">\\n        <div class=\\"w-full h-[20px] backdrop-blur-lg absolute top-[-20px] left-0 bg-repeat-x scroll-bg\\"\\n            style=\\"background-image: url('/images/title_background.webp');\\">\\n        </div>\\n        <div class=\\"flex justify-start items-end\\">\\n          <h1 class=\\"text-2xl font-bold text-left leading-tight\\">{post.title}</h1>\\n        </div>\\n        <div class=\\"flex justify-start items-end\\">\\n          <p class=\\"post-date\\"><i class=\\"fas fa-calendar-alt\\"></i> 發佈日期：{formatDate(post.date)}</p>\\n        </div>\\n        <div class=\\"flex justify-start items-end\\">\\n          <p class=\\"post-author\\"><i class=\\"fas fa-user\\"></i> 作者：{post.author}</p>\\n        </div>\\n        <!-- 顯示標籤 -->\\n        {#if post.tags && post.tags.length > 0}\\n          <div class=\\"post-tags\\">\\n            <i class=\\"fas fa-tags\\"></i>\\n            {#each post.tags as tag}\\n              <Tag isAll={false} {tag} selectedTag={null} />\\n            {/each}\\n          </div>\\n        {/if}\\n      </div>\\n    </section>\\n\\n    <article class=\\"post-container\\">\\n      <!-- 顯示文章的縮圖 -->\\n      <div class=\\"flex justify-center items-center\\">\\n        <img src={post.thumbnail} alt=\\"{post.title} thumbnail\\" class=\\"post-thumbnail\\" />\\n      </div>\\n\\n      <!-- 渲染文章內容，使用 {@html} 來顯示已轉換的 HTML -->\\n      <div class=\\"post-content\\">{@html post.content}</div>\\n\\n      <hr class=\\"my-8\\"/>\\n\\n      <div id=\\"disqus_thread\\"></div>\\n      <script>\\n        (function() {\\n          var d = document, s = d.createElement('script');\\n          s.src = 'https://yuutatsubasawebsite.disqus.com/embed.js';\\n          s.setAttribute('data-timestamp', +new Date());\\n          (d.head || d.body).appendChild(s);\\n        })();\\n      <\/script>\\n    </article>\\n  </section>\\n{:else}\\n  <!-- 錯誤狀態使用 ErrorMessage 組件 -->\\n  <ErrorMessage message=\\"未找到文章\\" />\\n{/if}\\n"],"names":[],"mappings":"AAiDE,6CAAgB,CACd,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,OAAO,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,gBAAgB,CAC/C,CAEA,gCAAG,CACD,SAAS,CAAE,MAAM,CACjB,aAAa,CAAE,IAAI,CACnB,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,KACT,CAEA,6CAAgB,CACd,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,CACnB,aAAa,CAAE,MACjB,CAEA,wCAAW,CACT,SAAS,CAAE,MAAM,CACjB,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,MACjB,CAEA,0CAAa,CACX,SAAS,CAAE,MAAM,CACjB,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,OACjB,CAEA,yBAAU,CAAC,gBAAC,CAAE,2BAAY,CAAC,gBAAE,CAC3B,YAAY,CAAE,MAAM,CACpB,KAAK,CAAE,IACT,CAEA,wCAAW,CACT,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,aAAa,CAAE,MACjB,CAEA,yBAAU,CAAC,gBAAE,CACX,YAAY,CAAE,MAAM,CACpB,KAAK,CAAE,IACT,CAWA,0CAAa,CACX,eAAe,CAAE,KAAK,CACtB,mBAAmB,CAAE,MAAM,CAC3B,iBAAiB,CAAE,SAAS,CAC5B,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,QAAQ,CACrB,eAAe,CAAE,UAAU,CAC3B,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,MACd"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { data } = $$props;
  if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);
  $$result.css.add(css);
  return `${`${validate_component(ErrorMessage, "ErrorMessage").$$render($$result, { message: "載入中..." }, {}, {})}`}`;
});
export {
  Page as default
};
